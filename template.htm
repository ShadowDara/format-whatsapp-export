<!-- Format WhatsApp Chat Export -->
<!-- made by Shadowdara -->
<!-- licensed under Appace 2.0 -->
<!-- https://github.com/ShadowDara/format-whatsapp-export -->
 
<!DOCTYPE html><html lang="en"><head> <meta charset="UTF-8"> <title>Chat Export</title> <style> /* CSS Code for format-whatsapp-export */ /* Licensed under Appache 2.0 by Shadowdara */ /* https://github.com/ShadowDara/format-whatsapp-export */ * { box-sizing: border-box; padding: 0; margin: 0; } html { width: 100%; } body { background-color: white; display: flex; flex-direction: column; align-content: center; font-family: 'Inter', sans-serif; } main { width: 60%; padding: 1rem 1rem; background-color: rgb(223, 223, 223); border-radius: 10px; margin: 2rem auto; overflow-wrap: break-word; word-break: break-all; margin-top: 4rem; margin-bottom: 4rem; } .main-box { background-color: rgb(189, 189, 189); border-radius: 10px; padding: 0.5rem; margin: 9px 7px; } .main-box .author { background-color: tomato; border-radius: 10px; padding: 4px 8px; display: inline-block; /* ← passt die Breite dem Inhalt an */ white-space: nowrap; /* ← verhindert Zeilenumbruch */ } .main-box .message { padding: 0.5rem; } .main-box .time { text-align: right; } header { position: fixed; top: 0; left: 0; right: 0; background-color: #2c3e50; color: white; text-align: center; padding: 0.75rem; font-size: 0.9rem; z-index: 1000; display: flex; justify-content: center; /* Horizontal zentrieren */ align-items: center; /* Vertikal zentrieren */ gap: 1%; width: 100%; } header .header-main-container { width: 26%; } header .header-container { width: 16%; } header .heading { font-size: 1.7rem; } header button, header input { padding: 0.15rem 1rem; border-radius: 20px; } footer { position: fixed; bottom: 0; left: 0; right: 0; background-color: #2c3e50; color: white; text-align: center; padding: 0.75rem; font-size: 0.9rem; z-index: 1000; display: flex; justify-content: center; /* Horizontal zentrieren */ align-items: center; /* Vertikal zentrieren */ gap: 30%; width: 100%; } footer button { padding: 0.1rem 1rem; border-radius: 20px; } footer a { color: red; font-weight: bold; } footer a:hover { font-style: italic; } .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.6); display: none; justify-content: center; align-items: center; z-index: 1000; } /* Modal-Inhalt */ .modal { background: white; padding: 2em; border-radius: 8px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); max-width: 90%; max-height: 90%; } .modal button { margin-top: 1em; } @media (max-width: 1080px) { header .header-main-container { width: 20%; } header .header-container-2 { width: 30%; } header #search { width: 100%; } main { width: 85%; margin-top: 6.3rem; margin-bottom: 3.7rem; } footer { gap: 10%; } } @media (max-width: 748px) { main { width: 95%; margin: 1rem auto; margin-top: 5.3rem; margin-bottom: 3.3rem; padding: 0.5rem; } header, footer { flex-wrap: wrap; gap: 0.5rem; font-size: 0.85rem; padding: 0.5rem; } header .header-main-container, header .header-container { width: auto; flex: 1 1 auto; text-align: center; } header .heading { font-size: 1.4rem; } footer { gap: 1rem; font-size: 0.85rem; } footer button { padding: 0.2rem 0.8rem; font-size: 0.85rem; } } @media (max-width: 480px) { main { width: 100%; margin-top: 5.3rem; margin-bottom: 0.3rem; } .main-box { margin: 6px 0; padding: 0.4rem; } .main-box .author { font-size: 0.85rem; padding: 3px 6px; } .main-box .message { font-size: 0.9rem; padding: 0.4rem; } .main-box .time { font-size: 0.75rem; } header { padding: 0.5rem; gap: 0.4rem; } header .header-main-container { width: 50%; text-align: center; } header input { width: 100%; padding: 0.3rem; } header #page_number_css, header #message_count_css, #title_header, #subcredit { display: none; } footer { flex-direction: row; gap: 0.5rem; padding: 0.5rem; } footer span { padding: 0; } footer button { width: 100%; font-size: 0.85rem; } } </style></head><body> <header> <span class="header-container"> <p id="page_number_css"> <span>Page: </span> <span id="page_number"></span> </p> </span> <span class="header-container"> <p id="message_count_css"> <span>Message Count: </span> <span id="message_count"></span> </p> </span> <!-- Header Main --> <span class="header-main-container" id="title_header"> <p class="heading">Whatsapp Chat Export</p> </span> <span class="header-container"> <input type="text" id="search" placeholder="Search"> </span> <span class="header-container header-container-2"> <button id="statistics">Statistics</button> <button id="settings">Settings</button> </span> </header> <!-- Statistics Popup --> <div id="statistics_modalOverlay" class="modal-overlay"> <div class="modal"> <button id="statistics_closeModalBtn">Close Button</button> <h2>Statistics</h2> <p><i>added soon</i></p> </div> </div> <!-- Settings Popup --> <div id="settings_modalOverlay" class="modal-overlay"> <div class="modal"> <button id="settings_closeModalBtn">Close Button</button> <h2>Settings</h2> <label> <input type="checkbox" id="show_pictures"> show Pictures </label> </div> </div> <main> <noscript>Bitte JavaScript aktivieren, um den Chat anzuzeigen.</noscript> <!-- Messages will be inserted here! --> <div id="msg-store"></div> </main> <footer> <span> <button id="previous_page">Previous Page</button> </span> <span id="subcredit">Made with <a href="https://github.com/shadowdara/format-whatsapp-export" target="_blank">fwe</a> and ❤️ by Shadowdara</span> <span> <button id="next_page">Next Page</button> </span> </footer> <script defer> /* Chat Data */ window.json_data = {{.}}; </script> <script> /* JS Code for format-whatsapp-export */ /* Licensed under Appache 2.0 by Shadowdara */ /* https://github.com/ShadowDara/format-whatsapp-export */ /* Virtual Dom for the Messages */ let count = 0; let count_end = 30; let page_nr = 1; let msg_count = 1; /* Message Variable for the Search Function */ let sr_messages = []; /* Settings Values */ const show_pictures = document.getElementById("show_pictures").checked; /* Switch to the Previous Messages Page */ document.getElementById("next_page").onclick = () => { count += 30; count_end += 30; page_nr += 1; do_count(count, count_end, window.json_data); }; /* Switch to the Next Messages Page */ document.getElementById("previous_page").onclick = () => { if (count >= 30) { count -= 30; count_end - 30; page_nr -= 1; do_count(count, count_end, window.json_data); } else { alert("There is no previous Page available!"); } }; /* Statistics POPUP Window */ const statistics_openBtn = document.getElementById("statistics"); const statistics_closeBtn = document.getElementById("statistics_closeModalBtn"); const statistics_overlay = document.getElementById("statistics_modalOverlay"); statistics_openBtn.addEventListener("click", () => { statistics_overlay.style.display = "flex"; }); statistics_closeBtn.addEventListener("click", () => { statistics_overlay.style.display = "none"; }); statistics_overlay.addEventListener("click", (event) => { if (event.target === statistics_overlay) { statistics_overlay.style.display = "none"; } }); /* Settings POPUP Window */ const settings_openBtn = document.getElementById("settings"); const settings_closeBtn = document.getElementById("settings_closeModalBtn"); const settings_overlay = document.getElementById("settings_modalOverlay"); settings_openBtn.addEventListener("click", () => { settings_overlay.style.display = "flex"; }); settings_closeBtn.addEventListener("click", () => { settings_overlay.style.display = "none"; }); settings_overlay.addEventListener("click", (event) => { if (event.target === settings_overlay) { settings_overlay.style.display = "none"; } }); /* Regex Search for Messages */ function regexsearch(eingabe) { const escaped = eingabe .trim() .split(/\s+/) .map(wort => wort.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')) .join(".*"); return new RegExp(escaped, 'i'); } /* to add a Message on the HTML Site */ function do_count(c1, c2, data) { document.getElementById("msg-store").innerHTML = ""; for (const entry of data.slice(c1, c2)) { document.getElementById("msg-store").innerHTML += `<div class="main-box"><div class="author">${entry.sender}</div><div class="message">${entry.msg}</div><div class="time">${entry.date} ${entry.time}</div></div>`; } document.getElementById("page_number").innerText = page_nr; } /* EXECUTING CODE */ /* When no data */ document.getElementById("msg-store").innerHTML = "<pre>No Data Available!<pre>"; /* Inserting the Data */ for (const entry of window.json_data) { msg_count += 1; } document.getElementById("message_count").innerText = msg_count; do_count(count, count_end, window.json_data); /* Search Bar */ document.getElementById("search").addEventListener("keypress", function (event) { if (event.key === "Enter") { event.preventDefault(); const search_value = this.value; const search_regex = regexsearch(search_value); msg_count = 0; for (const entry of window.json_data) { if (search_regex.test(entry.msg)) { sr_messages.push(entry); msg_count += 1; } } document.getElementById("message_count").innerText = msg_count; do_count(count, count_end, sr_messages); /* Search Works */ alert(`${msg_count} Results`); } }); </script></body></html>
